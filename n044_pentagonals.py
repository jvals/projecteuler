'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''

from time import time

start = time()

def pentagonal(n):
	return int(n*(3*n-1)/2)


pentagonal_values = {pentagonal(n) : n for n in range(1,1000000)}

D = float('inf')

for i in range(1,100000):
	for j in range(i,10000):
		PI = pentagonal(i)
		PJ = pentagonal(j)
		if (PI + PJ) in pentagonal_values and (PJ - PI) in pentagonal_values:
			D = min(D,abs(PJ-PI))




print(D)
print('Time: ',time()-start)